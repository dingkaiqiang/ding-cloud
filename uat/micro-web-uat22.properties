#spring.profiles.active=cluster

spring.application.name=micro-web
server.port=8083

#是否讲ip注册到倒eureka
eureka.instance.prefer-ip-address=true
#服务续约，心跳的时间间隔
eureka.instance.lease-renewal-interval-in-seconds=30
#如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
eureka.instance.lease-expiration-duration-in-seconds=90
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#是否注册到eureka
eureka.client.registerWithEureka=true
#是否从eureka中拉取注册信息
eureka.client.fetchRegistry=true
#健康检测
eureka.client.healthcheck.enabled=true
eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8763/eureka/

#micro-order.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#MICRO-ORDER.ribbon.NFLoadBalancerPingClassName=com.netflix.loadbalancer.PingUrl
#could not be registered. A bean with that name has already been defined in file
spring.main.allow-bean-definition-overriding=true

management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
#hystrix.stream  开放所有的监控接口
management.endpoints.web.exposure.include=*

#security.basic.enabled=true
#spring.security.user.name=micro-web
#spring.security.user.password=123

security.oauth2.resource.user-info-uri=http://localhost:3030/security/check
#security.oauth2.client.id=micro-web
security.oauth2.client.clientId=micro-web
security.oauth2.client.client-secret=123456
security.oauth2.client.access-token-uri=http://127.0.0.1:3030/oauth/token
security.oauth2.client.grant-type=client_credentials
security.oauth2.client.scope=aa

spring.rabbitmq.host=192.168.137.100
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin

# 刷新配置url  http://localhost:8081/actuator/bus-refresh
spring.cloud.bus.refresh.enabled=true
spring.cloud.bus.trace.enabled=true
